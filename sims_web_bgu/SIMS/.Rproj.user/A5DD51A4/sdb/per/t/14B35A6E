{
    "collab_server" : "",
    "contents" : "library(shiny)\n#setwd(\"/srv/shiny-server/sims/\")\n#library(googleVis)\n\n# Define UI for random distribution application \nshinyUI(\n  \n  ### TO see the title in a seperate block, uncomment the below line and the bracket at the end of the code ##\n  fluidPage(theme = \"shiny.css\",    \n            list(tags$head(HTML('<link rel=\"icon\", href=\"\", \n                                type=\"image/jpg\" />')\n            )\n            ),\n            div(style=\"padding: 0px 0px; width: '100%'\",\n                titlePanel(\n                  title=\"\", windowTitle=\"SIMS - Simplified Interventional Mapping System\"\n                )\n            ),\n            navbarPage(title=div(tags$div(HTML('<img src=\"WINLOGO_backwhite.png\" height=\"60\" width=\"80\" <br>\n                                               <font size = \"40\"> <strong> SIMS: Simplified Interventional Mapping System </strong></font>'), collapsible = TRUE, fluid = FALSE                         \n            )),   \n            \n            sidebarLayout(position = \"left\",\n                          sidebarPanel(textInput(\"userid\", \"User ID:\"),\n                                       passwordInput(\"password\", \"Password:\"),      \n                                       actionButton(\"login\", \"Log in\"),\n                                       actionButton(\"signup\", \"Sign up\"),\n                                       p(\"\"),  \n                                       tags$hr(),\n                                       tags$div(HTML('<font size = \"4\"><strong> SIMS score </strong></font>')),\n                                       tags$div(HTML('')),\n                                       fileInput(\"mytable_mrna\",\"Upload a csv file containing mRNA fold change\", accept = c('text/csv',\n                                                                                                                            'text/comma-seperated-values',\n                                                                                                                            'text/tab-seperated-values',\n                                                                                                                            'text/plain',\n                                                                                                                            '.csv')),\n                                       conditionalPanel(condition=\"output.checkUpload!=null\",\n                                                        uiOutput(\"mRNA\")    \t\n                                       ),                    \n                                       fileInput(\"mytable_mirna\",\"Upload a csv file containing miRNA fold change\", accept = c('text/csv',\n                                                                                                                              'text/comma-separated-values',\n                                                                                                                              'text/tab-separated-values',\n                                                                                                                              'text/plain',\n                                                                                                                              '.csv')), # accept defines the file type accepted by the program\n                                       conditionalPanel(condition=\"output.checkUpload!=null\",\n                                                        uiOutput(\"miRNA\")  \t\t\n                                       ),\n                                       fileInput(\"mytable_CNA\",\"Upload a csv file containing CNA\", accept = c('text/csv',\n                                                                                                              'text/comma-separated-values',\n                                                                                                              'text/tab-separated-values',\n                                                                                                              'text/plain',\n                                                                                                              '.csv')), # accept defines the file type accepted by the program\n                                       conditionalPanel(condition=\"output.checkUpload!=null\",\n                                                        uiOutput(\"CNA\")    \t\n                                       ),                    \n                                       fileInput(\"mytable_mutation\",\"Upload a csv file containing mutation\", accept = c('text/csv',\n                                                                                                                        'text/comma-separated-values',\n                                                                                                                        'text/tab-separated-values',\n                                                                                                                        'text/plain',\n                                                                                                                        '.csv')), # accept defines the file type accepted by the program\n                                       conditionalPanel(condition=\"output.checkUpload!=null\",\n                                                        uiOutput(\"Mutation\")  \t\t\n                                       ),\n                                       checkboxInput('header', 'Header', TRUE),\n                                       radioButtons('sep', 'Separator',\n                                                    c(Comma=',',\n                                                      Semicolon=';',\n                                                      Tab='\\t'),\n                                                    ','),      \n                                       #numericInput(\"n\", \"N:\", min = 0, max = 100, value = 50),\n                                       #actionButton(\"goButton\", \"Go!\"),\n                                       actionButton(\"go\", \"Calculate score\"),\n                                       tags$hr(),\n                                       p('Developed by', a(href = 'http://www.winconsortium.org/', 'Win Consortium')\n                                       )           \n                          ),\n                          \n                          # Show a tabset that includes a plot, summary, and table view\n                          # of the generated distribution\n                          mainPanel(#verbatimTextOutput(\"nText\"),\n                            tabsetPanel(#type = \"tabs\",              \n                              tabPanel('Home', \n                                       p('                                                                                 '),\n                                       p('                                                                                 '),\n                                       tags$div(HTML('<p style = \"text-align:justify\" style = \"font-family: Source Sans Pro;\"><font size = \"5\"> <strong>Welcome to SIMS</strong></font></p>')),\n                                       tags$div(HTML('\n                                                     <p style = \"text-align:justify\" style = \"font-family: Source Sans Pro;\"><font size = \"5\"> <color = \"red\">Non-small cell lung cancer (NSCLC) is a leading cause of death worldwide. Targeted monotherapies produce high regression rates, albeit in \n                                                     only small oncogene-driven subsets of patients with metastatic NSCLC. Further, responders inevitably develop resistance and succumb. Combination\n                                                     therapies may overcome resistance, but a scientific methodology for determining individualized combinations that can be used to prosecute lung\n                                                     cancer remains an urgent unmet need. We present a novel strategy for identifying customized combinations of triple regimen targeted agents, deploying\n                                                     a simplified interventional mapping system (SIMS) that merges knowledge about existent drugs and their impact on the hallmarks of cancer.\n                                                     Based on interrogation of matched lung tumor and normal tissue (183 genes in 121 patients with NSCLC) and an integrative assessment of targeted\n                                                     genomic sequencing, copy number variation, transcriptomics and miRNA expression, the activation status of 24 interventional nodes \n                                                     (target/gene/pathway(s)) were elucidated. An algorithm was developed to create a 1-10 scoring system, enabling ranking of the activated interventional\n                                                     nodes in each patient. Based on the trends of co-activation at interventional points, tailored combinations of drug triplets were defined, which will\n                                                     inform a prospective trial facilitated by cooperation between academia and industry in the Worldwide Innovative Network (WIN) consortium. This unique\n                                                     approach will enable selection of personalized combination therapies in next generation clinical trials, whose objective should be to significantly\n                                                     impact survival in metastatic NSCLC and other malignancies.</color></font></p>')                      \n                                       ),\n                                       tags$div(HTML('<p style = \"text-align:justify\" style = \"font-family: Source Sans Pro;\"><font size = \"3\"> Please cite: Lazar, V., et al. \"A simplified interventional mapping system (SIMS) for the selection of combinations of targeted treatments in non-small cell lung cancer.\" Oncotarget (2015).</font></p>'))\n                                       ),\n                              navbarMenu(\"Score\",\n                                         tabPanel(\"Calculate Score\", h4(\"SIMS Score\"), tableOutput(\"calculateScore\")),\n                                         tabPanel(\"Analysis\", plotOutput(\"scoreAnalysis\"))\n                                         #tabPanel(\"go\", verbatimTextOutput(\"nText\"))\n                              ),\n                              navbarMenu(\"mRNA\",\n                                         tabPanel(\"Contents\", tableOutput(\"mRNAcontents\")),\n                                         tabPanel(\"Summary\", verbatimTextOutput('mRNAsummary')),\n                                         tabPanel(\"Plot\", plotOutput(\"mRNAplot\"))\n                              ),\n                              navbarMenu(\"miRNA\",\n                                         tabPanel(\"Contents\", tableOutput(\"miRNAcontents\")),\n                                         tabPanel(\"Summary\", verbatimTextOutput('miRNAsummary')),\n                                         tabPanel(\"Plot\", plotOutput(\"miRNAplot\"))\n                              ) ,\n                              navbarMenu(\"CNA\",\n                                         tabPanel(\"Contents\", tableOutput(\"CNAcontents\")),\n                                         tabPanel(\"Summary\", verbatimTextOutput('CNAsummary')),\n                                         tabPanel(\"Plot\", plotOutput(\"CNAplot\"))\n                              ) ,\n                              navbarMenu(\"Mutation\",\n                                         tabPanel(\"Contents\", tableOutput(\"Mutation_contents\")),\n                                         tabPanel(\"Summary\", verbatimTextOutput('Mutation_summary')),\n                                         tabPanel(\"Plot\", plotOutput(\"Mutation_plot\"))\n                              )\n                                       )\n                            \n                                       )\n                            )\n                          )\n            )\n            )\n",
    "created" : 1493271081121.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "496336966",
    "id" : "14B35A6E",
    "lastKnownWriteTime" : 1449403718,
    "last_content_update" : 1449403718,
    "path" : "~/sims_web_bgu/SIMS/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}