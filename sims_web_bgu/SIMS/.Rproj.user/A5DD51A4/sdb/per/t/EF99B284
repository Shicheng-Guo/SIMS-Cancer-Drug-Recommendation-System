{
    "collab_server" : "",
    "contents" : "#### Copy number alteration\n\ndecile_Calculation1 <- function(data_fold, data_foldChange){\n  score_matrix= matrix(NA, 121, 24)\n  #Read file of fold change for 121 patients, 24 nodes  \n  # Get the patient IDs to a vector\n  patientID = data_foldChange[,1][-1]\n  \n  for( i in 1:24){  \n    #sorted_data_fold = sort(data_fold[,i], decreasing = FALSE)\n    #decile_calculated<-cut(sorted_data_fold,quantile(sorted_data_fold,(0:10)/10),include.lowest=TRUE)\n    X = data_fold[,i]\n    decile_calculated<- cut(X,quantile(X,(0:10)/10),include.lowest=TRUE)  \n    score_matrix[,i] = decile_calculated\n  }\n  final_data = cbind(patientID, score_matrix)\n  return(final_data)\n}\n\n\ncalculate_fold_change1 <- function(data_foldChange, datatype, xxx){\n  # Code to calculate the average fold change of nodes\n  node_names = c(\"Her_pathway\", \"CDK4_6\", \"PLK_AURKA_Kinesins\", \"ANGIOGENESIS\", \"ANGIOPOIETINS\", \"IMMUNO-Modulator\", \"PI3K\", \"MET\",\n                 \"MEK\", \"ERK\", \"Antiapoptosis\", \"FGF\", \"mTOR_AKT_PTEN\", \"RAS\", \"TELOMERASE\", \"IGF_Warburg\", \"WNT\", \"PARP\", \"HDAC\",\n                 \"JAK_STAT\", \"HEDGEHOG\", \"NOTCH\", \"DNA_REPAIR\",\"OTHERS\")\n  # Get the patient IDs to a vector\n  patientID = data_foldChange[,1][-1]\n  # Get node names to a vector\n  SIMS=data_foldChange[1,]\n  # Remove node names from data_foldChange\n  new_data_foldChange=data_foldChange[c(-1),]\n  # Create a matrix to store the mean fold change\n  final_data= matrix(NA, 121, 24)\n  \n  # For the 24 nodes and 121 patients, calulate the mean fold change\n  for(i in 1:24){\n    ### Since Notch node is absent in miRNA put NA in column 22 only for miRNA ###\n    if(node_names[i] != 'NOTCH' || datatype != \"miRNA\"){\n      sub1=new_data_foldChange[,which(SIMS== node_names[i])]    \n      sub2=matrix(NA,ncol=ncol(sub1),nrow=nrow(sub1))\n      for(j in 1:ncol(sub1)){\n        sub2[,j]=as.numeric(sub1[,j])\n      }\n      sub2 = as.matrix(sub2)\n      fold_change = rowMeans(sub2)\n      final_data[,i] = fold_change      \n    }    \n  }\n  if(datatype == \"mRNA\"){\n    # Add nodes names( as column names) to the mean fold change\n    colnames(final_data) = node_names  \n    final_score = decile_Calculation1(final_data, xxx)    \n    final_score = as.data.frame(final_score)\n    #names(final_score) = node_names\n    return(list(final_score, final_data))\n  }\n  \n  else{\n    return(final_data)    \n  }\n  \n}\n\n\ncalculate_CNA <- function(cna, mrna_full){\n  xxx = mrna_full\n  mrna = mrna_full[-1,-1]\n  #CNA_MRNA_matrix = matrix(NA, nrow = 121, ncol = 181 )\n  CNA_MRNA_matrix = data.frame(matrix(NA, nrow = 121, ncol = 181 ))\n  for(i in 1:121){\n    x = as.numeric(mrna[i,])\n    y = cna[i,]\n    z = as.numeric(revalue(as.character(y), c(N = 1, A = 1.5, D = 0.5)), warn_missing = F)\n    prod = x * z\n    print(prod)\n    CNA_MRNA_matrix[i, ] = prod   \n  } \n  mrna_full[2:122, 2:182] = CNA_MRNA_matrix  \n  # Code to calculate the average fold change of nodes\n  node_names = c(\"Her_pathway\", \"CDK4_6\", \"PLK_AURKA_Kinesins\", \"ANGIOGENESIS\", \"ANGIOPOIETINS\", \"IMMUNO-Modulator\", \"PI3K\", \"MET\",\n                 \"MEK\", \"ERK\", \"Antiapoptosis\", \"FGF\", \"mTOR_AKT_PTEN\", \"RAS\", \"TELOMERASE\", \"IGF_Warburg\", \"WNT\", \"PARP\", \"HDAC\",\n                 \"JAK_STAT\", \"HEDGEHOG\", \"NOTCH\", \"DNA_REPAIR\",\"OTHERS\")\n  \n  final_data_cnv = calculate_fold_change1(mrna_full, \"mRNA\", xxx)  \n  cna_score = as.matrix(final_data_cnv[[1]][,-1])\n  #print(cna_score)\n  return(cna_score)\n}\n",
    "created" : 1493271107974.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1686869183",
    "id" : "EF99B284",
    "lastKnownWriteTime" : 1449403718,
    "last_content_update" : 1449403718,
    "path" : "~/sims_web_bgu/SIMS/CopyNumberAlteration.R",
    "project_path" : "CopyNumberAlteration.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}